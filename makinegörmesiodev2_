{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "a18b17ac",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import cv2\n",
    "import numpy as np\n",
    "\n",
    "\n",
    "def viewImage(image):\n",
    "    cv2.namedWindow('Display', cv2.WINDOW_NORMAL)\n",
    "    cv2.imshow('Display', image)\n",
    "    cv2.waitKey(0)\n",
    "    cv2.destroyAllWindows()\n",
    "image = cv2.imread('lena.png')\n",
    "hsv_img = cv2.cvtColor(image, cv2.COLOR_BGR2HSV)\n",
    "\n",
    "viewImage(hsv_img) ## 1\n",
    "cv2.imwrite('seda_resim.jpg', hsv_img)\n",
    "green_low = np.array([45 , 100, 50] )\n",
    "green_high = np.array([75, 255, 255])\n",
    "curr_mask = cv2.inRange(hsv_img, green_low, green_high)\n",
    "hsv_img[curr_mask > 0] = ([75,255,200])\n",
    "\n",
    "viewImage(hsv_img) ## 2\n",
    "cv2.imwrite('seda_resim1.jpg', hsv_img)\n",
    "\n",
    "RGB_again = cv2.cvtColor(hsv_img, cv2.COLOR_HSV2RGB)\n",
    "gray = cv2.cvtColor(RGB_again, cv2.COLOR_RGB2GRAY)\n",
    "\n",
    "viewImage(gray) ## 3\n",
    "cv2.imwrite('seda_resim2.jpg', gray)\n",
    "ret, threshold = cv2.threshold(gray, 90, 255, 0)\n",
    "\n",
    "viewImage(threshold) ## 4\n",
    "cv2.imwrite('seda_resim3.jpg', threshold)\n",
    "contours, hierarchy =  cv2.findContours(threshold,cv2.RETR_TREE,cv2.CHAIN_APPROX_SIMPLE)\n",
    "cv2.drawContours(image, contours, -1, (0, 0, 255), 3)\n",
    "\n",
    "viewImage(image) ## 5\n",
    "cv2.imwrite('seda_resim4.jpg', image)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f0ce79fe",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d7fe214a",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
